name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-linux:
    name: Test on Linux
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          pkg-config \
          libssl-dev \
          zlib1g-dev
    
    - name: Configure CMake
      run: |
        cmake -S . -B build-linux \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_CACHE_TEST=ON \
          -DENABLE_METRICS=ON \
          -G Ninja
    
    - name: Build
      run: cmake --build build-linux --parallel
    
    - name: Run comprehensive test suite
      run: |
        # Use our existing test runner script
        chmod +x run_all_tests.sh
        ./run_all_tests.sh
    


  test-compilers:
    name: Test with clang-20
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install clang-20
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang-20 \
          cmake \
          ninja-build \
          pkg-config \
          libssl-dev \
          zlib1g-dev
    
    - name: Configure CMake
      env:
        CC: clang-20
        CXX: clang++-20
      run: |
        cmake -S . -B build \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_CACHE_TEST=ON \
          -DENABLE_METRICS=ON \
          -G Ninja
    
    - name: Build
      run: cmake --build build --parallel
    
    - name: Run unit tests
      run: |
        # Use fast Catch2 unit tests for compiler compatibility
        chmod +x run_unit_tests.sh
        ./run_unit_tests.sh --quick

  test-build-configurations:
    name: Test ${{ matrix.build-type }} build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-type: [Debug, Release, RelWithDebInfo]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          pkg-config \
          libssl-dev \
          zlib1g-dev
    
    - name: Configure and Build
      run: |
        cmake -S . -B build \
          -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
          -DBUILD_CACHE_TEST=ON \
          -DENABLE_METRICS=ON \
          -G Ninja
        cmake --build build --parallel
    
    - name: Run smoke tests
      run: |
        # Run quick smoke tests
        chmod +x run_all_tests.sh
        ./run_all_tests.sh --quick